{"version":3,"sources":["Calendar.js","serviceWorker.js","index.js"],"names":["cookies","Cookies","Calendar","props","state","selectedEventId","submitDone","openModal","openEventModal","weekDates","title","date","time","visitorId","repeat","events","fromDate","sunday","Date","setDate","getDate","getDay","result","toDateString","push","get","newDateTime","getTime","set","path","axios","then","res","setState","data","console","log","catch","error","e","this","target","value","selectedDate","selectedTime","checked","dateTimeElement","document","getElementById","innerHTML","setTime","id","getAttribute","that","preventDefault","eventObject","parentDiv","post","closeEventModal","delete","window","location","reload","givenDay","givenHour","dataTransfer","setData","firstChild","getElementsByTagName","getData","movingId","targetElement","put","alert","today","dd","mm","getMonth","yyyy","getFullYear","week","getWeek","weekLayout","i","length","toString","hours","className","role","currentMonth","currentYear","map","day","index","splitDate","split","key","style","width","hour","onClick","height","data-time","data-date","onDrop","drop","onDragOver","allowDrop","onDragStart","drag","draggable","event","_id","data-checked","data-title","openEventItemModal","backgroundColor","xmlns","viewBox","d","disabled","onChange","onChangeTitle","type","readOnly","onChangeRepeat","onDelete","onSubmit","htmlFor","Component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3943fbd1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\nconst cookies = new Cookies();\n\nexport default class Calendar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedEventId: null,\n      submitDone: false,\n      openModal: false,\n      openEventModal: false,\n      weekDates: null,\n      title: \"\",\n      date: null,\n      time: null,\n      visitorId: null,\n      repeat: false,\n      events: []\n    }\n  }\n\n  getWeek(fromDate) {\n    let sunday = new Date(fromDate.setDate(fromDate.getDate() - fromDate.getDay()));\n    let result = [new Date(sunday).toDateString()];\n    while (sunday.setDate(sunday.getDate() + 1) && sunday.getDay() !== 0) {\n      result.push(new Date(sunday).toDateString());\n    }\n    return result;\n  }\n\n\n  componentDidMount() {\n    let visitorId = cookies.get('visitorId');\n    if(visitorId == null || visitorId === \"\"){\n      let date = new Date();\n      let newDateTime = date.getTime();\n      cookies.set('visitorId', newDateTime, { path: '/' });\n    }\n    axios.get('/events/visitor/' + visitorId).then(res => {\n      this.setState({\n        events: res.data\n      });\n      console.log(res.data);\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  onChangeTitle(e) {\n    this.setState({title: e.target.value});\n  }\n\n  setDate(selectedDate) {\n    this.setState({date: selectedDate});\n  }\n\n  setTime(selectedTime) {\n    this.setState({time: selectedTime});\n  }\n\n  onChangeRepeat(e) {\n    this.setState({repeat: e.target.checked});\n  }\n\n  openEventModal(e, date, time) {\n    let dateTimeElement = date + time;\n    let parentDiv = document.getElementById(dateTimeElement);\n    if(parentDiv.innerHTML === \"\"){\n      this.setState({openModal: true});\n    }\n    this.setState({submitDone: false})\n    this.setDate(date);\n    this.setTime(time);\n  }\n\n  openEventItemModal(e, date, time, title) {\n    this.setState({selectedEventId: e.target.id});\n    this.setState({openEventModal: true});\n    this.setState({title: e.target.getAttribute('data-title')});\n    this.setState({repeat: e.target.getAttribute('data-checked')});\n    this.setState({submitDone: false});\n    this.setDate(date);\n    this.setTime(time);\n  }\n\n  closeEventModal(e) {\n    this.setState({openModal: false});\n    this.setState({openEventModal: false});\n    this.setState({title: ''});\n    this.setState({repeat: false});\n  }\n\n  onSubmit(e) {\n    let that = this;\n    e.preventDefault();\n\n    const eventObject = {\n      title: this.state.title,\n      date: this.state.date,\n      time: this.state.time,\n      visitorId: cookies.get('visitorId'),\n      repeat: this.state.repeat\n    };\n    let dateTimeElement = this.state.date + this.state.time;\n    let parentDiv = document.getElementById(dateTimeElement);\n    axios.post('/events/create-event', eventObject).then(res =>\n      that.closeEventModal(),\n      parentDiv.innerHTML = parentDiv.innerHTML + '<div class=\"px-2 py-1 rounded-lg mt-1 overflow-hidden border\"><p class=\"text-sm truncate leading-tight bg-green-200\">'+ this.state.title +'</p></div>',\n      that.setState({submitDone: true})\n    );\n  }\n\n  onDelete(e) {\n    e.preventDefault();\n    axios.delete('/events/delete-event/' + this.state.selectedEventId)\n    .then((res) => {\n        window.location.reload()\n    }).catch((error) => {\n        console.log(error)\n    });\n  }\n\n  allowDrop(e) {\n    e.preventDefault();\n  }\n\n  drag(e, givenDay, givenHour) {\n    e.dataTransfer.setData(\"text\", e.target.id);\n    e.dataTransfer.setData(\"movingId\", document.getElementById(givenDay + givenHour).firstChild.getElementsByTagName('p')[0].id);\n  }\n\n  drop(e, givenDay, givenHour) {\n    e.preventDefault();\n    let parentDiv = document.getElementById(givenDay + givenHour);\n    if(parentDiv.innerHTML === \"\"){\n      let data = e.dataTransfer.getData(\"text\");\n      let movingId = e.dataTransfer.getData(\"movingId\");\n      let targetElement = document.getElementById(e.target.id);\n      if(targetElement !== null){\n        targetElement.innerHTML = document.getElementById(data).innerHTML;\n        document.getElementById(data).innerHTML = '';\n        axios.put('/events/update-event/' + movingId, {date: givenDay, time: givenHour})\n        .then((res) => {\n          alert('Event Updated')\n        }).catch((error) => {\n          console.log(error)\n        });\n      }\n    }else{\n      alert('Drop not allowed on scheduled event.');\n    }\n  }\n\n  render() {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    let week = this.getWeek(new Date(today));\n    let weekLayout = [];\n    for (let i = 0; week.length > i; i++) {\n      let data = week[i];\n      weekLayout.push(data.toString());\n    }\n\n    let hours = ['1 AM', '2 AM', '3 AM', '4 AM', '5 AM', '6 AM', '7 AM', '8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', '7 PM',\n    '8 PM', '9 PM', '10 PM', '11 PM' , '12 AM'];\n\n    return (\n      <div className=\"App\" >\n        <div className=\"bg-indigo-900 text-center py-4 lg:px-4\">\n          <div className=\"p-2 bg-indigo-800 items-center text-indigo-100 leading-none lg:rounded-full flex lg:inline-flex\" role=\"alert\">\n            <span className=\"font-semibold mr-2 text-left flex-auto\">Welcome ! Click on box to add event </span>\n          </div>\n        </div>\n        <div>\n          <div className=\"antialiased sans-serif bg-gray-100\">\n            <div>\n              <div className=\"container mx-auto px-4 py-2 md:py-24\">\n\n                <div className=\"font-bold text-gray-800 text-xl mb-4\">\n                  Week Calendar\n                </div>\n\n                <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n\n                  <div className=\"flex items-center justify-between py-2 px-6\">\n                    <div>\n                      <span className=\"text-lg font-bold text-gray-800\">{this.state.currentMonth}</span>\n                      <span className=\"ml-1 text-lg text-gray-600 font-normal\">{this.state.currentYear}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"-mx-1 -mb-1\">\n                    <div className=\"flex flex-wrap\">\n                      {\n                        weekLayout.map((day, index) => {\n                          let splitDate = day.split(' ');\n                          return (\n                            <div key={index} style={{width: '14.26%'}} className=\"px-2 py-2\">\n                              <div className=\"text-gray-600 text-sm uppercase tracking-wide font-bold text-center\">{splitDate[0]}</div>\n                              <div className=\"text-gray-800 text-md uppercase tracking-wide font-bold text-center mb-4\">{splitDate[1]  + \" \" + splitDate[2]}</div>\n                              <div>\n                                {\n                                  hours.map((hour, index) => {\n                                    return (\n                                      <div key={index} className=\"pt-2 border-r border-b relative rounded-lg shadow mb-2 hover:bg-blue-200 cursor-pointer\" onClick={e => { this.openEventModal(e, day, hour); e.preventDefault(); }}>\n                                       <div className=\"inline-flex items-center justify-center text-gray-600\">{hour}</div>\n                                        <div style={{height: '80px'}} data-time={hour} data-date={day} className=\"overflow-y-auto mt-1\" id={day+hour} onDrop={e => { this.drop(e, day, hour); }} onDragOver={ e=> { this.allowDrop(e);}} onDragStart={e=> { this.drag(e, day, hour)}} draggable=\"true\" >\n                                          {\n                                            this.state.events.map((event, index) => {\n                                              var date = new Date(event.date);\n                                              if(date.toString().split(' ')[2] === day.split(' ')[2] && event.time === hour){\n                                                return(\n                                                  <div key={index} className=\"px-2 py-1 rounded-lg mt-1 overflow-hidden border list>\">\n                                                    <p id={event._id} data-checked={event.repeat} data-title={event.title} className=\"text-sm truncate leading-tight\" onClick={e => { this.openEventItemModal(e, day, hour, event.title); e.preventDefault(); }}>{event.title}</p>\n                                                  </div>\n                                                );\n                                              } else {\n                                                return null;\n                                              }\n                                            })\n                                          }\n\n                                        </div>\n                                      </div>\n                                    );\n                                  })\n                                }\n                              </div>\n                            </div>\n                          );\n                        })\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {this.state.openModal === true ||  this.state.openEventModal === true?\n                <div style={{backgroundColor: 'rgba(0, 0, 0, 0.8)'}} className=\"fixed z-40 top-0 right-0 left-0 bottom-0 h-full w-full\">\n                  <div className=\"p-4 max-w-xl mx-auto relative absolute left-0 right-0 overflow-hidden mt-24\">\n                    <div onClick={e => { this.closeEventModal(e); e.preventDefault(); }} className=\"shadow absolute right-0 top-0 w-10 h-10 rounded-full bg-white text-gray-500 hover:text-gray-800 inline-flex items-center justify-center cursor-pointer\">\n                      <svg className=\"fill-current w-6 h-6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                        <path\n                          d=\"M16.192 6.344L11.949 10.586 7.707 6.344 6.293 7.758 10.535 12 6.293 16.242 7.707 17.656 11.949 13.414 16.192 17.656 17.606 16.242 13.364 12 17.606 7.758z\" />\n                      </svg>\n                    </div>\n\n                    <div className=\"shadow w-full rounded-lg bg-white overflow-hidden w-full block p-8\">\n\n                      <h2 className=\"font-bold text-2xl mb-6 text-gray-800 border-b pb-2\">{this.state.openEventModal === true ? \"Event Detail\" : \"Add Event Detail\"}</h2>\n\n                      <div className=\"mb-4\">\n                        <label className=\"text-gray-800 block mb-1 font-bold text-sm tracking-wide\">Event title</label>\n                        <input value={this.state.title} disabled={this.state.openEventModal ? true : false} onChange={e => { this.onChangeTitle(e); }} className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded-lg w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500\" type=\"text\"/>\n                      </div>\n\n                      <div className=\"mb-4\">\n                        <label className=\"text-gray-800 block mb-1 font-bold text-sm tracking-wide\">Event date</label>\n                        <input value={this.state.date} className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded-lg w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500\" type=\"text\" readOnly/>\n                      </div>\n\n                      <div className=\"mb-4\">\n                        <label className=\"text-gray-800 block mb-1 font-bold text-sm tracking-wide\">Event time</label>\n                        <input value={this.state.time} className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded-lg w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500\" type=\"text\" readOnly/>\n                      </div>\n\n                      {this.state.openEventModal ?\n                        <label className=\"flex justify-start items-start\">\n                          <div className={this.state.repeat === \"true\" ? 'select-none text-green-800' : 'select-none text-red-800'}>{this.state.repeat === \"true\" ? 'Repeats every day' : 'Do not repeat every day'}</div>\n                        </label>\n                      :\n                      <label className=\"flex justify-start items-start\">\n                        <div className=\"bg-white border-2 rounded border-gray-400 w-6 h-6 flex flex-shrink-0 justify-center items-center mr-2 focus-within:border-blue-500\">\n                          <input onChange={e => { this.onChangeRepeat(e); }} type=\"checkbox\" className=\"opacity-0 absolute\"/>\n                          <svg className=\"fill-current hidden w-4 h-4 text-green-500 pointer-events-none\" viewBox=\"0 0 20 20\"><path d=\"M0 11l2-2 5 5L18 3l2 2L7 18z\"/></svg>\n                        </div>\n                        <div className=\"select-none\">Repeats every day</div>\n                      </label>\n                      }\n                      <div className=\"mt-8 text-right\">\n                        <button onClick={e => { this.closeEventModal(e); e.preventDefault(); }} type=\"button\" className=\"bg-white hover:bg-gray-100 text-gray-700 font-semibold py-2 px-4 border border-gray-300 rounded-lg shadow-sm mr-2\">\n                          Cancel\n                        </button>\n                        {this.state.openEventModal ?\n                          <button onClick={e => { this.onDelete(e);}} type=\"button\" className=\"bg-red-800 hover:bg-red-700 text-white font-semibold py-2 px-4 border border-red-700 rounded-lg shadow-sm\">\n                            Delete Event\n                          </button>\n                          :\n                          <button onClick={e => { this.onSubmit(e);}} type=\"button\" className=\"bg-green-800 hover:bg-green-700 text-white font-semibold py-2 px-4 border border-green-700 rounded-lg shadow-sm\">\n                            Save Event\n                          </button>\n                        }\n                      </div>\n\n                    </div>\n\n                  </div>\n                </div>\n                :null\n              }\n\n              {\n                this.state.submitDone ?\n                  <div className=\"alert-toast fixed bottom-0 right-0 m-8 w-5/6 md:w-full max-w-sm\">\n                    <input type=\"checkbox\" className=\"hidden\" id=\"footertoast\"/>\n\n                    <label className=\"close cursor-pointer flex items-start justify-between w-full p-2 bg-green-500 h-24 rounded shadow-lg text-white\" title=\"close\" htmlFor=\"footertoast\">\n                      Event added successfully!\n\n                      <svg className=\"fill-current text-white\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n                        <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n                      </svg>\n                    </label>\n                  </div>\n                :null\n              }\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './styles/tailwind.css';\nimport Calendar from './Calendar';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Calendar />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}